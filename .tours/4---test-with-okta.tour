{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "4 - Test token revocation endpoint with Okta",
  "nextTour": "4 - Redirect the user back to login",
  "steps": [
    {
      "title": "Relaunch your app",
      "description": "## Relaunch your app\n\n1. Go to the Terminal tab where you initially ran the `npm start` command. Press Ctrl+C to stop its execution.\n\n1. Click [here](command:codetour.sendTextToTerminal?[\"npm start\"]) to re-run your app.\n> This issues the command `npm start` to your Terminal. \n\n1. Click on the PORTS panel within this window.\n\n1. You will see your app running on port 3000 here. Right click on this entry and select **Port visibility** > **Public**.\n\n1. Click the icon of a globe to open your app in a new tab.\n\n1. Click the **Login** button and login using the credentials you set up for **trinity@whiterabbit.fake**.\n"
    },
    {
      "title": "Provide revocation endpoint info to the Okta",
      "description": "## Provide the token revocation endpoint to Okta\n\n1. In an **incognito browser**, log in to your Okta Admin Dashboard.\n\n1. Go to **Applications > Applications** and select your UL App integration.\n\n1. Under the General tab, scroll down to the **Logout** section.\n\n1. Under **Global token revocation**, select **Edit** and select the **Okta system or admin initiates logout** option.\n\n1. Click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-3000.app.github.dev/global-token-revocation\"]) and copy the URL that prints here in the Terminal. This is your  global token revocation endpoint URL.\n\n1. In the **Endpoint URL** field, paste your global token revocation endpoint URL.\n\n1. Set **Endpoint authentication type** to **Signed JWT**.\n1. Set the **Subject format** to **Email Identifier**\n> This means Okta will send a request identifying the user with the email used to SSO into the OIDC webb app. Okta will authenticate to your Universal Logout endpoint with the secure OAuth2.0 method signed JWT. \n\n1. Select the **Save** button.\n"
    },
    {
      "title": "End the user's session through the Okta Admin Dashboard",
      "description": "## End the user's session through the Okta Admin Dashboard\n\n1. From the Okta Admin Console, go to **Directory > People**.\n1. Search for and select the user **Trinity Anderson**.\n1. Select **More Actions** and then **Clear User Sessions**. \n1. On the pop-up, check the option **Also include logout enabled apps and Okta API tokens before clicking Clear and revoke**. \n1. Select the **Clear and revoke** button.\n> You'll receive a response that says: \"Sessions cleared and tokens revoked.\"\n\n1. Go to the tab where you signed Trinity into your web app and refresh the page.\n> At this point, the user's session has been deleted. If you return to the main page by clicking the Okta logo on the app, the user is prompted to reauthenticate. When you click Login again, you should see that your Okta session had been revoked due to activity that triggered a security alert.",
      "selection": {
        "start": {
          "line": 11,
          "character": 55
        },
        "end": {
          "line": 11,
          "character": 163
        }
      }
    }
  ]
}
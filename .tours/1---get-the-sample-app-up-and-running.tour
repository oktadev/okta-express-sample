{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "1 - Get the sample app up and running",
  "nextTour": "2 - Build a Universal Logout endpoint to find a user and their active sessions",
  "steps": [
    {
      "title": "Prerequisites",
      "description": "## Prerequisites\n\nThis workspace contains an Express sample app with OIDC support implemented. In this lab, we will build the Universal Logout (UL) endpoint for this app.\n\n### Troubleshooting: \nAs we move through the lab and edit the app, we will test it incrementally."
    },
    {
      "title": "Sign in to the Okta Admin Dashboard",
      "description": "## Sign in to the Okta Admin Dashboard\n\n1. Go to the tab wherw you are logged into the Okta Heropa VM.\n2. Open the credentials panel by clicking the arrow to the right of the window. \n3. Copy the **Link** to your Okta preview org.\n4. Open an **incognito** browser window on your local machine (not the VM) and paste the Okta preview org link. \n>It's important to use an incognito browser window to log in as Admin as we will using another non-incognito browser window to log in as an end user later.\n5. Log in as **oktatraining** using the credentials provided in the credentials panel in Heropa."
    },
    {
      "title": "Set up an OIDC app integration in Okta",
      "description": "## Set up an OIDC app integration in Okta\n\nFrom the Okta Admin Dashboard, create an OIDC application named **UL Sample**. You can follow the instructions listed here under [Set up your app](https://developer.okta.com/docs/guides/implement-grant-type/authcode/main/#set-up-your-app).  \n\n### When you get to the step for setting the Sign-in redirect URIs (Step 7), do the following: \n\n1. Click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-3000.app.github.dev/authorization-code/callback\"]) and copy the URL that prints here in the Terminal. \n>Note this runs the following command: `echo https://${CODESPACE_NAME}-3000.app.github.dev/authorization-code/callback`.\n\n2. Paste the URL into the **Sign-in** redirect URIs field in your Okta app integration form.\n\n1. Click [here](command:codetour.sendTextToTerminal?[\"echo https://$CODESPACE_NAME-3000.app.github.dev\"]) and copy the URL that prints here in the Terminal. \n>Note this runs the following command: `echo https://${CODESPACE_NAME}-3000.app.github.dev`.\n\n2. Paste the URL into the **Sign-out** redirect URIs field in your Okta app integration form.\n\n\n3. Under **Assignments > Controlled** access select **Skip group assignment for now**.\n\n4. Remember to click **Save** when you are done!\n\n5. ⚠️ **Important**: Notice that you now see your app's client credentials. Stay on this page. You will use the Client ID and Client Secret for the following step.",
      "selection": {
        "start": {
          "line": 1,
          "character": 0
        },
        "end": {
          "line": 1,
          "character": 42
        }
      }
    },
    {
      "file": ".okta.env",
      "description": "## Update ORG_URL environment variable\n\nNotice that the `.okta.env` file has been opened for you. Let's update the `OKTA_ORG_URL` environment variable.\n\nRecall that can copy your Okta org's URL from the side panel in your VM under **Link**.\n\nThe value of this variable should be a string of the form: `\"https://oktaice#######.oktapreview.com\"`",
      "line": 1,
      "title": "Update ORG_URL environment variable",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 39
        }
      }
    },
    {
      "file": ".okta.env",
      "description": "## Update CLIENT_ID and CLIENT_SECRET environment variables\n\nNotice that the `.okta.env` file has been opened for you. Using the client credentials details on your Okta app's OIDC integration page, update the **CLIENT_ID** and **CLIENT_SECRET** environment variables. All variable must be stored as strings.\n\nClick [here](command:workbench.action.files.save) to save your changes to this file.",
      "line": 3,
      "title": "Update environment variables: OKTA_CLIENT_ID and OKTA_CLIENT_SECRET",
      "selection": {
        "start": {
          "line": 2,
          "character": 1
        },
        "end": {
          "line": 3,
          "character": 39
        }
      }
    },
    {
      "title": "Create a test user",
      "description": "## Create a test user\n\nTo test whether Universal Logout works for our app, we'll create a new user on Okta whose account we will forcibly sign out. \n\n\n1. If you aren't already, sign in to your Okta org's Admin Console. \n2. Go to **Directory > People**. \n3. Select **Add Person**.\n4. Create a user  with the following properties:\n\n    >User type: **User**\n\n    >First name: **Trinity**\n\n    >Last name: **Anderson**\n\n    >Username: **trinity@whiterabbit.fake**\n\n    >Activation: **Activate now**\n\n5. Enable the option **I will set password**.\n6. Enter a password of your choice. (Tip: You can use the password in the side panel of your VM).\n7. Uncheck **User must change password on first login**.\n8. Select **Save**.\n",
      "selection": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 19,
          "character": 34
        }
      }
    },
    {
      "title": "Assign user the app",
      "description": "## Assign user the app\n\n1. Select the new user **Trinity Anderson** you just created (you may need to refresh the page to see the new user).\n1. Select **Assign Applications**.\n1. Assign this user the **UL App**\n1. Select **Save and Go Back**.\n1. Select **Done**."

    }
  ]
}